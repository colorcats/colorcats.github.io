<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>瞎捣鼓的废宅</title>
  <icon>https://www.gravatar.com/avatar/ef3b32cb12d3c073cf5aa79e7c76009c</icon>
  <subtitle>徘徊于虚幻与现实</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-09T03:05:44.914Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>colorcat</name>
    <email>color_cat@126.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图像处理基础学习笔记（一）——图像处理简介</title>
    <link href="http://yoursite.com/2020/07/09/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2020/07/09/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E7%AE%80%E4%BB%8B/</id>
    <published>2020-07-09T00:53:45.000Z</published>
    <updated>2020-07-09T03:05:44.914Z</updated>
    
    <content type="html"><![CDATA[<h2 id="图像">图像</h2><p>现代电脑中常见的各种图片比如.jpg .png本质上是各种像素的集合，图片的分辨率就指的是它横向与纵向分别是多少个像素。这一点在像素图片中很明显能看出来。</p><p><img src= "/img/loading.gif" data-src="https://wx2.sbimg.cn/2020/07/09/CGXbw.jpg" alt="像素s" style="zoom:50%;" /></p><p>每个像素只有单一的颜色，整个图片就是由<kbd>横向像素</kbd>*<kbd>纵向像素</kbd>=<kbd>分辨率</kbd>个像素组成的。那么对图像进行处理的思路就很清晰了，对每个点上的像素值进行修改，就可以实现图像的变化。</p><h2 id="像素">像素</h2><h3 id="色彩">色彩</h3><p>已知图像是由像素点组成的，那么像素点具体是什么。</p><p>首先我们需要明白人眼识别颜色的原理，当光线照射到物体表面，一部分波长的光被物体吸收，而剩下波长的光线会被反射进入人眼，人眼视网膜上的感光细胞会对特定范围波长的光线有感知效果。这个范围就是可见光的波长范围，而研究表明，人眼中负责感光的视锥细胞有三种，分别对红、绿、蓝三种光线敏感，也就是说，人眼感知色彩是通过对红绿蓝三种颜色的光线进行混合。</p><p>后来科学家通过研究，证明通过红绿蓝三种颜色不同值的混合，可以制出可见光中任何一种颜色。自然而然的，彩色显示器就选择了以红绿蓝三种原色为基础调配出彩色的方式。这种显色方式被称为<kbd>RGB</kbd>，由RGB三个数值组成的三维空间就是RGB的色彩空间，这个立方体中的任意一个点都是一个特定的颜色，这种以三个数值描述像素点色彩的图片称为三通道，R、G、B分别是其中一个颜色通道。如果每个通道的取值范围是0-100，那么整个色彩空间里就有一百万种颜色（各通道数值只取正整数）。取值范围越大，可显示的色彩数就越多。</p><img src= "/img/loading.gif" data-src="https://wx2.sbimg.cn/2020/07/09/CGgc6.jpg" alt="R" style="zoom:40%;" /><p>计算机中的数据以二进制的方式储存，每个通道的数值都需要用二进制来记录。目前最常用的是以8位二进制也就是2位十六进制来表示单通道，范围是0-255。而三个通道加起来，就是24位二进制、6位十六进制，这就是24位真彩色，总共可以呈现一千六百多万种颜色，几乎达到人眼极限（32位真彩色是在24位的三通道基础上，加了一个灰度通道，可以理解为给之前单一的颜色加了一个可调透明度的设定，以此来更真实的模拟自然色彩）。</p><p>为了简洁，一个色彩就可以用6位十六进制的数进行描述。有很多在线调色的网页，可以试着玩一玩。</p><p><img src= "/img/loading.gif" data-src="https://wx1.sbimg.cn/2020/07/09/CGjtN.png" alt="RGB调色"></p><h3 id="像素矩阵">像素矩阵</h3><p>经过上边的说明，应该已经清楚每种色彩可以用2位十六进制进行描述，那么整个图片就是n个像素的拼接。也就是说每个像素点包括三个数值，通过修改各个数值就可以实现对像素的操作，那么对每个像素点都通过某种算法进行修改，就可以实现各种各样的图像处理。比如PS中的锐化、模糊、提高对比度等等功能，本质上都是对图像像素点数值的修改。</p><p>比如现在有四个像素点，各通道数值如下表</p><table><thead><tr><th style="text-align:center">R</th><th style="text-align:center">G</th><th style="text-align:center">B</th><th style="text-align:center">R</th><th style="text-align:center">G</th><th style="text-align:center">B</th></tr></thead><tbody><tr><td style="text-align:center">255</td><td style="text-align:center">255</td><td style="text-align:center">255</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">255</td><td style="text-align:center">255</td><td style="text-align:center">255</td></tr></tbody></table><p>还可以表示为</p><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th></tr></thead><tbody><tr><td style="text-align:center">#FFFFFF</td><td style="text-align:center">#000000</td></tr><tr><td style="text-align:center">#000000</td><td style="text-align:center">#FFFFFF</td></tr></tbody></table><p>呈现效果就如下所示。</p><img src= "/img/loading.gif" data-src="https://wx1.sbimg.cn/2020/07/09/CGzXM.png" alt="呈现s图片" style="zoom:40%;" /><h2 id="具体操作">具体操作</h2><p>上边已经对图像处理的基础原理进行了说明，而在用程序进行具体实现时，我们需要用到一些相关的库。我目前正在学习的是OpenCV，它支持很多种语言，C C++ Python 等都可以支持。我目前只对C和C++有一定的了解，所以后续也是基于C++对OpenCV进行学习。</p><p>这里需要指出，OpenCV是一个封装了很多API的库，但是学习图像处理真正要学习的是它的图像处理算法，了解它是通过什么样的操作、实现了什么样的效果，而不仅仅是学习如何调用API。</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;图像&quot;&gt;图像&lt;/h2&gt;
&lt;p&gt;现代电脑中常见的各种图片比如.jpg .png本质上是各种像素的集合，图片的分辨率就指的是它横向与纵向分别是多少个像素。这一点在像素图片中很明显能看出来。&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; dat
      
    
    </summary>
    
    
    
      <category term="图像处理基础" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>科创项目-视觉追踪系统</title>
    <link href="http://yoursite.com/2020/06/30/%E7%A7%91%E5%88%9B%E9%A1%B9%E7%9B%AE-%E8%A7%86%E8%A7%89%E8%BF%BD%E8%B8%AA%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2020/06/30/%E7%A7%91%E5%88%9B%E9%A1%B9%E7%9B%AE-%E8%A7%86%E8%A7%89%E8%BF%BD%E8%B8%AA%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-06-30T03:57:54.000Z</published>
    <updated>2020-07-09T02:59:41.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目简介">项目简介</h2><p>​四月底开始接触这个项目，主要的目的是制作出一套能够实时采集<strong>瞳孔数据</strong>，通过<strong>数据分析</strong>得到注视点，最终呈现出来。</p><pre class="mermaid">graph LRA(摄像头采集双眼图像)-->B(图像预处理)B-->C(计算视线)C-->D(在环境图像中标注注视点)D-->A</pre><p>​整个项目在明年年中结项，最后的成果呈现预计要有一套完整硬件设备、配套算法以及各种测试数据。</p><p>​就我个人而言我对图像处理与数据分析部分更感兴趣，所以可能会主要做这方面的工作（项团内部至今还没有人员分工 😅）。</p><hr><h2 id="项目任务安排">项目任务安排</h2><p>​受疫情影响，一直不能回校。再加上五六月连着两个月考试，项团小组至今都没有独立讨论过项目进度安排。个人认为这并不是一个好开端，由于不了解其他人对整个项目的参与热情，也不便发起讨论。</p><p>​但总的来说，在返校前各自就项目所需进行知识学习肯定是首要的。返校后应该会尽快开展项目细节的讨论，确定项目的具体方案。</p><hr><h2 id="项目涉及技术">项目涉及技术</h2><h3 id="硬件">硬件</h3><p>​这部分主要包括电路中的控制部分与视觉采集部分，以及框架的建模。</p><p>​电路部分具体用什么控制，以及用什么方式与视觉采集部分相连还没有确定，但我目前是打算先用树莓派尝试编写算法（吃灰已久🌚）。因为要小型化，所以估计未来要上其他的单片机（到处都是知识盲区😂）。如果开学前我能把算法方面的东西学的差不多，可能也会试着学一下AD。</p><p>​框架的话，组里的两个学长好像比较擅长建模，估计会在其他部分设计完成后，由他们进行框架建模。</p><p>​但就技术难度而言，硬件这部分并不大，主要是<strong>明暗双目图像采集</strong>，以及<strong>环境图像采集</strong>，一共是三个摄像头。最主要的就是要实现三个摄像头的正常工作以及位置标定。</p><pre class="mermaid">graph LRA(硬件)-->B(电路/AD等)A-->C(框架/soildworks等)B-->D(采集图像信息)C-->E(方便携带以及标定位置)</pre><h3 id="软件">软件</h3><p>​这部分可以拓展的就比较多了。</p><p>​最基础的视觉追踪，需要能对明暗双目图像进行处理，得到瞳孔信息，通过数据处理得到视线方程。主要目标就是稳定、准确、快速。</p><pre class="mermaid">graph LRA(采集到的信息)---B(明暗双瞳图片)A---C(环境图片)B-->|数据分析/OpenCV| D(视线方程)D-->|标记注视点|C</pre><p>​目前而言我主要在学习图片的数据分析那部分，主要内容是图像处理的基础理论，以及OpenCV的各种API。</p><p>​如果可以完成上述的基础功能，应该还可以拓展出延申的应用。比如对注视点处的物体进行识别，并加以分析，呈现出相关信息，比如与测温模块结合，或许可以动态呈现注视点的温度信息。不过目前这还只是我的个人想法，如果基础的视觉追踪系统完成的比较早，或许可以考虑一下拓展的应用。</p><h2 id="进度">进度</h2><h3 id="团队状态">团队状态</h3><blockquote><p>四月底项团立项</p><p>五月初初次研讨，说明项团任务</p><p>受期末考试影响，至今还未再次研讨，处于各自学习的状态。</p></blockquote><h3 id="个人状态">个人状态</h3><blockquote><p>五月粗浅的学习了C++基础</p><p>六月开始学习图像处理理论基础，以及OpenCV的基础API</p><p>七月预计会完成OpenCV的基础课程，开始尝试针对项目需求进行程序编写(买成品红外摄像头好贵啊😭)</p></blockquote><h2 id="说明">说明</h2><p>我会动态更新这篇项目介绍博客，以及近期相关学习心得总结😄。</p><p>近期项目相关学习内容：<u><a href="%5Bhttps://colorcats.github.io/tags/%E7%A7%91%E5%88%9B%E9%A1%B9%E7%9B%AE/%5D(https://colorcats.github.io/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/)">图像处理基础</a></u></p><h2 id="周记">周记</h2><ul><li>7.5-本周一直在复习期末考试的课程，还得准备科一，没什么时间来做项目。下周考试结束后会再次开始相关工作。</li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;项目简介&quot;&gt;项目简介&lt;/h2&gt;
&lt;p&gt;​		四月底开始接触这个项目，主要的目的是制作出一套能够实时采集&lt;strong&gt;瞳孔数据&lt;/strong&gt;，通过&lt;strong&gt;数据分析&lt;/strong&gt;得到注视点，最终呈现出来。&lt;/p&gt;
&lt;pre class=&quot;mermai
      
    
    </summary>
    
    
    
      <category term="科创项目" scheme="http://yoursite.com/tags/%E7%A7%91%E5%88%9B%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="计算机视觉" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="动态更新" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
</feed>
